package assignment04PartD;public class CircularDoublyLinkedDeque<T> implements DequeInterface<T> {    DoublyLinkedNode firstNode;    public void addToFront(T newEntry) {    }    public void addToBack(T newEntry){    }    public T removeFront(){    }    public T removeBack(){    }    public T getFront(){    }    public T getBack(){    }    public boolean isEmpty() {        return firstNode.frontNode.data == null && firstNode.backNode.data == null;    }    public void clear(){    }    private class DoublyLinkedNode {        T data;        DoublyLinkedNode frontNode;        DoublyLinkedNode backNode;        DoublyLinkedNode (T data) {            this(data,null,null);        }        DoublyLinkedNode (T data, DoublyLinkedNode frontNode, DoublyLinkedNode backNode) {            this.data = data;            this.frontNode = frontNode;            this.backNode = backNode;        }    } // end DoublyLinkedNode} // end CircularDoublyLinkedDeque